// Code generated by ent, DO NOT EDIT.

package ent

import (
	"github.com/shinplay/ent/schema"
	"github.com/shinplay/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescAuthID is the schema descriptor for auth_id field.
	userDescAuthID := userFields[0].Descriptor()
	// user.DefaultAuthID holds the default value on creation for the auth_id field.
	user.DefaultAuthID = userDescAuthID.Default.(func() string)
	// user.AuthIDValidator is a validator for the "auth_id" field. It is called by the builders before save.
	user.AuthIDValidator = func() func(string) error {
		validators := userDescAuthID.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(auth_id string) error {
			for _, fn := range fns {
				if err := fn(auth_id); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[1].Descriptor()
	// user.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	user.UsernameValidator = userDescUsername.Validators[0].(func(string) error)
}
